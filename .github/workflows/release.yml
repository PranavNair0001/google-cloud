name: release-to-maven-central-staging
on:
  push:
    branches:
    - develop
    - 'release/**'

jobs:
  setup-job:
    runs-on: ubuntu-latest
    steps:
    - name: Wait for trigger.yml to complete successfully
      uses: lewagon/wait-on-check-action@v1.0.0
      with:
        ref: ${{ github.sha }}
        check-name: 'trigger'
        repo-token: ${{ github.token }}
        wait-interval: 5
        allowed-conclusions: success
    - name: Wait for build.yml to complete successfully
      uses: lewagon/wait-on-check-action@v1.0.0
      with:
        ref: 'develop'
        check-name: 'build'
        repo-token: ${{ github.token }}
        wait-interval: 10
        allowed-conclusions: success
    - name: Wait for e2e.yml to complete successfully
      if: ${{ github.ref_name == 'develop' }}
      uses: lewagon/wait-on-check-action@v1.0.0
      with:
        ref: ${{ github.sha }}
        check-name: 'e2e'
        repo-token: ${{ github.token }}
        wait-interval: 10
        allowed-conclusions: success

  release-job:
    runs-on: ubuntu-latest
    needs: setup-job
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
          
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
        
    - name: Remove failed downloads
      run: find ~/.m2  -name "*.lastUpdated" -exec grep -q "Could not transfer" {} \; -print -exec rm {} \;

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        MAVEN_OPTS: '-Xmx3200m'

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: ossrh
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Publish to Apache Maven Central
      run: mvn -DskipTests clean deploy -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }}
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        MAVEN_OPTS: '-Xmx3200m'

