name: release-to-maven-central-staging
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

jobs:

  release-job:
    runs-on: self-hosted
    steps:
    - name: Get Secrets from GCP Secret Manager
      id: 'secrets'
      uses: 'google-github-actions/get-secretmanager-secrets@v0'
      with:
        secrets: |-
          OSSRH_USERNAME:project-step-pranav/OSSRH_USERNAME
          OSSRH_TOKEN:project-step-pranav/OSSRH_TOKEN
          MAVEN_GPG_PASSPHRASE:project-step-pranav/MAVEN_GPG_PASSPHRASE
          MAVEN_GPG_PRIVATE_KEY:project-step-pranav/MAVEN_GPG_PRIVATE_KEY

    - uses: actions/checkout@v2
      with:
        ref: ${{ inputs.ref }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        MAVEN_OPTS: '-Xmx3200m'

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: ossrh
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD
#        gpg-private-key: ${{ steps.secrets.outputs.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Publish to Apache Maven Central
      run: mvn -DskipTests clean deploy # -Dgpg.passphrase=$MAVEN_GPG_PASSPHRASE
      env:
        OSSRH_USERNAME: ${{ steps.secrets.outputs.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ steps.secrets.outputs.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ steps.secrets.outputs.MAVEN_GPG_PASSPHRASE }}
        MAVEN_OPTS: '-Xmx3200m'

